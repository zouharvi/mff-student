getw()
getwd()
setwd('/home/bara/svn/teaching/NPFL054.2018/02/lab/nli/data')
getwd()
## read true labels
doc.info <- read.table("../README", sep='\t')
true.labels <- doc.info[,2]
# function to get colors for leaf nodes in dendrogram
colLab <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
labCol <- labelColors[doc.info[ doc.info$V1 == a$label,2]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = labCol)
}
n
}
#############################################################
#############################################################
## create Corpus
docs <- Corpus(DirSource("./"))
# read a particular document
writeLines(as.character(docs[[30]]))
# create a document-term matrix
# = matrix that lists all occurrences of words in the corpus.
# documents are represented by rows and the terms (or words) by columns.
# If a word occurs in a particular document n times,
# then the matrix entry for corresponding to that row and column is n.
# if it doesnâ€™t occur at all, the entry is 0.
dtm <- DocumentTermMatrix(docs)
# print a summary
dtm
# convert dtm to matrix
m <- as.matrix(dtm)
# compute distance between document vectors
d <- dist(m)
###############
## EXERCISE #TBA: Hierarchical clustering with the NLI data
###############
hc.complete <- hclust(dist(d), method = "complete")
hc.average <- hclust(dist(d), method = "average")
hc.single <- hclust(dist(d), method = "single")
# draw dendrogram
par(mfrow=c(1,3))
plot(hc.complete, main = "Complete", xlab="", sub="", cex=.9)
plot(hc.average,  main = "Average",  xlab="", sub="", cex=.9)
plot(hc.single,   main = "Single",   xlab="", sub="", cex=.9)
# more cool dendrogram
hcd <- as.dendrogram(hc.complete)
# red -- SPA
# blue -- ZHO
# green -- DEU
# chocolate -- ARA
# purple -- TEL
# c('red', 'blue', 'green', 'chocolate', 'purple')
labelColors <- c("#FF0000", "#0000FF", "#008000", "#D2691E", "#800080")
# color labels by their true values
# using dendrapply
clusDendro <-  dendrapply(hcd, colLab)
# make plot
plot(clusDendro,
type = "rectangle",
ylab = "Height",
main = "Agglomerative hierarchical clustering with complete linkage")
# add a legend
legend(60, 200,
legend = c("Spanish", "Chinese", "German", "Arabic", "Telugu"),
col = c("#FF0000", "#0000FF", "#008000", "#D2691E", "#800080"),
lty = 1,
lwd = 2,
text.font = 2,
cex = 1)
library(tm)
