Terminals unused in grammar

   LABEL
   CONST
   TYPE
   VAR
   BEGIN
   END
   PROCEDURE
   FUNCTION
   ARRAY
   OF
   GOTO
   IF
   THEN
   ELSE
   WHILE
   DO
   REPEAT
   UNTIL
   FOR
   OR
   NOT
   RECORD
   UINT
   REAL
   STRING
   DOT
   COMMA
   EQ
   COLON
   LPAR
   RPAR
   DOTDOT
   LSBRA
   RSBRA
   ASSIGN
   OPER_REL
   OPER_SIGNADD
   OPER_MUL
   FOR_DIRECTION


Grammar

    0 $accept: mlaskal "end of file"

    1 mlaskal: PROGRAM IDENTIFIER SEMICOLON


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
PROGRAM (258) 1
LABEL (259)
CONST (260)
TYPE (261)
VAR (262)
BEGIN (263)
END (264)
PROCEDURE (265)
FUNCTION (266)
ARRAY (267)
OF (268)
GOTO (269)
IF (270)
THEN (271)
ELSE (272)
WHILE (273)
DO (274)
REPEAT (275)
UNTIL (276)
FOR (277)
OR (278)
NOT (279)
RECORD (280)
IDENTIFIER <mlc::ls_id_index> (281) 1
UINT <mlc::ls_int_index> (282)
REAL <mlc::ls_real_index> (283)
STRING <mlc::ls_str_index> (284)
SEMICOLON (285) 1
DOT (286)
COMMA (287)
EQ (288)
COLON (289)
LPAR (290)
RPAR (291)
DOTDOT (292)
LSBRA (293)
RSBRA (294)
ASSIGN (295)
OPER_REL <mlc::DUTOKGE_OPER_REL> (296)
OPER_SIGNADD <mlc::DUTOKGE_OPER_SIGNADD> (297)
OPER_MUL <mlc::DUTOKGE_OPER_MUL> (298)
FOR_DIRECTION <mlc::DUTOKGE_FOR_DIRECTION> (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
mlaskal (46)
    on left: 1, on right: 0


State 0

    0 $accept: . mlaskal "end of file"
    1 mlaskal: . PROGRAM IDENTIFIER SEMICOLON

    PROGRAM  shift, and go to state 1

    mlaskal  go to state 2


State 1

    1 mlaskal: PROGRAM . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: mlaskal . "end of file"

    "end of file"  shift, and go to state 4


State 3

    1 mlaskal: PROGRAM IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: mlaskal "end of file" .

    $default  accept


State 5

    1 mlaskal: PROGRAM IDENTIFIER SEMICOLON .

    $default  reduce using rule 1 (mlaskal)
